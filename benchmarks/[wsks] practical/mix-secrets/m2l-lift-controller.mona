
ws1s ;
var1 $ ;
lastpos $;
var2  flooris0  ; 
var2  flooris1  ; 
var2  flooris2  ; 
var2  flooris3  ; 
var2  flooris4  ; 
var2  dooris0  ; 
var2  dooris1  ; 
var2  dooris2  ; 
var2  dooris3  ; 
var2  dooris4  ; 
var2  doorcls  ; 
var2  callhas0  ; 
var2  callhas1  ; 
var2  callhas2  ; 
var2  callhas3  ; 
var2  callhas4  ; 
var2  sendhas0  ; 
var2  sendhas1  ; 
var2  sendhas2  ; 
var2  sendhas3  ; 
var2  sendhas4  ; 
var2  moveis0  ; 
var2  moveis1  ; 
var2  moveis2  ; 
var2  moveis3  ; 
var2  moveis4  ; 
var2  moveisidle  ; 

pred prop1(var1 x2, var1 x3) = 

    # invariant
    ( all1 x4 :
        (x2<=x4 & x4<=x3)
        => ( x4 in (({0,..., $} \ (((((((((( flooris0  inter  flooris1 ) union ( flooris0  inter  flooris2 )) union ( flooris0  inter  flooris3 )) union ( flooris0  inter  flooris4 )) union ( flooris1  inter  flooris2 )) union ( flooris1  inter  flooris3 )) union ( flooris1  inter  flooris4 )) union ( flooris2  inter  flooris3 )) union ( flooris2  inter  flooris4 )) union ( flooris3  inter  flooris4 ))) inter (((( flooris0  union  flooris1 ) union  flooris2 ) union  flooris3 ) union  flooris4 )))
    )
;


pred prop2(var1 x5, var1 x6) = 

    # invariant
    ( all1 x7 :
        (x5<=x7 & x7<=x6)
        => ( x7 in (({0,..., $} \ ((((((((((((((( dooris0  inter  dooris1 ) union ( dooris0  inter  dooris2 )) union ( dooris0  inter  dooris3 )) union ( dooris0  inter  dooris4 )) union ( dooris0  inter  doorcls )) union ( dooris1  inter  dooris2 )) union ( dooris1  inter  dooris3 )) union ( dooris1  inter  dooris4 )) union ( dooris1  inter  doorcls )) union ( dooris2  inter  dooris3 )) union ( dooris2  inter  dooris4 )) union ( dooris2  inter  doorcls )) union ( dooris3  inter  dooris4 )) union ( dooris3  inter  doorcls )) union ( dooris4  inter  doorcls ))) inter ((((( dooris0  union  dooris1 ) union  dooris2 ) union  dooris3 ) union  dooris4 ) union  doorcls )))
    )
;


pred prop3(var1 x8, var1 x9) = 

    # invariant
    ( all1 x10 :
        (x8<=x10 & x10<=x9)
        => ( x10 in (({0,..., $} \ ((((((((((((((( moveis0  inter  moveis1 ) union ( moveis0  inter  moveis2 )) union ( moveis0  inter  moveis3 )) union ( moveis0  inter  moveis4 )) union ( moveis0  inter  moveisidle )) union ( moveis1  inter  moveis2 )) union ( moveis1  inter  moveis3 )) union ( moveis1  inter  moveis4 )) union ( moveis1  inter  moveisidle )) union ( moveis2  inter  moveis3 )) union ( moveis2  inter  moveis4 )) union ( moveis2  inter  moveisidle )) union ( moveis3  inter  moveis4 )) union ( moveis3  inter  moveisidle )) union ( moveis4  inter  moveisidle ))) inter ((((( moveis0  union  moveis1 ) union  moveis2 ) union  moveis3 ) union  moveis4 ) union  moveisidle )))
    )
;


pred prop4(var1 x11, var1 x12) = 

    # chop
    ( ex1 x13 : 
    (x11<=x13 & x13<=x12)
    &
        (# now
            ( x11=x13 )
        &     (x11 in (((((((((((( moveisidle  inter  flooris0 ) inter  dooris0 ) inter ({0,..., $} \  sendhas0 )) inter ({0,..., $} \  sendhas1 )) inter ({0,..., $} \  sendhas2 )) inter ({0,..., $} \  sendhas3 )) inter ({0,..., $} \  sendhas4 )) inter ({0,..., $} \  callhas0 )) inter ({0,..., $} \  callhas1 )) inter ({0,..., $} \  callhas2 )) inter ({0,..., $} \  callhas3 )) inter ({0,..., $} \  callhas4 )))
        )
    &
        # true
        ( x13<=x12 )
    )
;


pred prop5(var1 x14, var1 x15) = 

    (# and
        (# and
            (# and
               # unless
                    # arrow
                    (
                        (# not
                            ( x14<=x15 )
                        &   ~
                            # dimond
                            ( ex1 x16,x17 : 
                            (x14<=x16 & x16<=x17 & x17<=x15)
                            &
                                # chop
                                ( ex1 x18 : 
                                (x16<=x18 & x18<=x17)
                                &
                                    (# inside
# ext
(x16<x18)
                                    & ( all1 x19 :
(x16<=x19 & x19<x18)
=> ( x19 in (( moveisidle  inter  flooris0 ) inter ({0,..., $} \  moveis1 )))
                                      )
                                    )
                                &
                                    (# now
( x18=x17 )
                                    &     (x18 in ({0,..., $} \ (( moveisidle  inter  flooris0 ) union  moveis1 )))
                                    )
                                )
                            )
                        )
                    )
            &
               # unless
                    # arrow
                    (
                        (# not
                            ( x14<=x15 )
                        &   ~
                            # dimond
                            ( ex1 x20,x21 : 
                            (x14<=x20 & x20<=x21 & x21<=x15)
                            &
                                # chop
                                ( ex1 x22 : 
                                (x20<=x22 & x22<=x21)
                                &
                                    (# inside
# ext
(x20<x22)
                                    & ( all1 x23 :
(x20<=x23 & x23<x22)
=> ( x23 in (( moveisidle  inter  flooris1 ) inter ({0,..., $} \  moveis2 )))
                                      )
                                    )
                                &
                                    (# now
( x22=x21 )
                                    &     (x22 in ({0,..., $} \ (( moveisidle  inter  flooris1 ) union  moveis2 )))
                                    )
                                )
                            )
                        )
                    )
            )
        &
            # unless
               # arrow
               (
                    (# not
                        ( x14<=x15 )
                    &   ~
                        # dimond
                        ( ex1 x24,x25 : 
                        (x14<=x24 & x24<=x25 & x25<=x15)
                        &
                            # chop
                            ( ex1 x26 : 
                            (x24<=x26 & x26<=x25)
                            &
                                (# inside
                                    # ext
                                    (x24<x26)
                                & ( all1 x27 :
                                    (x24<=x27 & x27<x26)
                                    => ( x27 in (( moveisidle  inter  flooris2 ) inter ({0,..., $} \  moveis3 )))
                                  )
                                )
                            &
                                (# now
                                    ( x26=x25 )
                                &     (x26 in ({0,..., $} \ (( moveisidle  inter  flooris2 ) union  moveis3 )))
                                )
                            )
                        )
                    )
               )
        )
    &
        # unless
            # arrow
            (
               (# not
                    ( x14<=x15 )
               &   ~
                    # dimond
                    ( ex1 x28,x29 : 
                    (x14<=x28 & x28<=x29 & x29<=x15)
                    &
                        # chop
                        ( ex1 x30 : 
                        (x28<=x30 & x30<=x29)
                        &
                            (# inside
                                # ext
                                (x28<x30)
                            & ( all1 x31 :
                                (x28<=x31 & x31<x30)
                                => ( x31 in (( moveisidle  inter  flooris3 ) inter ({0,..., $} \  moveis4 )))
                              )
                            )
                        &
                            (# now
                                ( x30=x29 )
                            &     (x30 in ({0,..., $} \ (( moveisidle  inter  flooris3 ) union  moveis4 )))
                            )
                        )
                    )
               )
            )
    )
;


pred prop6(var1 x32, var1 x33) = 

    # unless
        # arrow
        (
            (# not
               ( x32<=x33 )
            &   ~
               # dimond
               ( ex1 x34,x35 : 
               (x32<=x34 & x34<=x35 & x35<=x33)
               &
                    # chop
                    ( ex1 x36 : 
                    (x34<=x36 & x36<=x35)
                    &
                        (# inside
                            # ext
                            (x34<x36)
                        & ( all1 x37 :
                            (x34<=x37 & x37<x36)
                            => ( x37 in (( moveisidle  inter  flooris4 ) inter ({0,..., $} \  moveis0 )))
                          )
                        )
                    &
                        (# now
                            ( x36=x35 )
                        &     (x36 in ({0,..., $} \ (( moveisidle  inter  flooris4 ) union  moveis0 )))
                        )
                    )
               )
            )
        )
;


pred prop7a(var1 x38, var1 x39) = 

    # unless
        # arrow
        (
            (# not
               ( x38<=x39 )
            &   ~
               # dimond
               ( ex1 x40,x41 : 
               (x38<=x40 & x40<=x41 & x41<=x39)
               &
                    # chop
                    ( ex1 x42 : 
                    (x40<=x42 & x42<=x41)
                    &
                        (# inside
                            # ext
                            (x40<x42)
                        & ( all1 x43 :
                            (x40<=x43 & x43<x42)
                            => ( x43 in ( moveis0  inter ({0,..., $} \ ( moveisidle  inter  flooris0 ))))
                          )
                        )
                    &
                        (# now
                            ( x42=x41 )
                        &     (x42 in ({0,..., $} \ ( moveis0  union ( moveisidle  inter  flooris0 ))))
                        )
                    )
               )
            )
        )
;


pred prop7b(var1 x44, var1 x45) = 

    # unless
        # arrow
        (
            (# not
               ( x44<=x45 )
            &   ~
               # dimond
               ( ex1 x46,x47 : 
               (x44<=x46 & x46<=x47 & x47<=x45)
               &
                    # chop
                    ( ex1 x48 : 
                    (x46<=x48 & x48<=x47)
                    &
                        (# inside
                            # ext
                            (x46<x48)
                        & ( all1 x49 :
                            (x46<=x49 & x49<x48)
                            => ( x49 in ( moveis1  inter ({0,..., $} \ ( moveisidle  inter  flooris1 ))))
                          )
                        )
                    &
                        (# now
                            ( x48=x47 )
                        &     (x48 in ({0,..., $} \ ( moveis1  union ( moveisidle  inter  flooris1 ))))
                        )
                    )
               )
            )
        )
;


pred prop7c(var1 x50, var1 x51) = 

    # unless
        # arrow
        (
            (# not
               ( x50<=x51 )
            &   ~
               # dimond
               ( ex1 x52,x53 : 
               (x50<=x52 & x52<=x53 & x53<=x51)
               &
                    # chop
                    ( ex1 x54 : 
                    (x52<=x54 & x54<=x53)
                    &
                        (# inside
                            # ext
                            (x52<x54)
                        & ( all1 x55 :
                            (x52<=x55 & x55<x54)
                            => ( x55 in ( moveis2  inter ({0,..., $} \ ( moveisidle  inter  flooris2 ))))
                          )
                        )
                    &
                        (# now
                            ( x54=x53 )
                        &     (x54 in ({0,..., $} \ ( moveis2  union ( moveisidle  inter  flooris2 ))))
                        )
                    )
               )
            )
        )
;


pred prop7d(var1 x56, var1 x57) = 

    # unless
        # arrow
        (
            (# not
               ( x56<=x57 )
            &   ~
               # dimond
               ( ex1 x58,x59 : 
               (x56<=x58 & x58<=x59 & x59<=x57)
               &
                    # chop
                    ( ex1 x60 : 
                    (x58<=x60 & x60<=x59)
                    &
                        (# inside
                            # ext
                            (x58<x60)
                        & ( all1 x61 :
                            (x58<=x61 & x61<x60)
                            => ( x61 in ( moveis3  inter ({0,..., $} \ ( moveisidle  inter  flooris3 ))))
                          )
                        )
                    &
                        (# now
                            ( x60=x59 )
                        &     (x60 in ({0,..., $} \ ( moveis3  union ( moveisidle  inter  flooris3 ))))
                        )
                    )
               )
            )
        )
;


pred prop7e(var1 x62, var1 x63) = 

    # unless
        # arrow
        (
            (# not
               ( x62<=x63 )
            &   ~
               # dimond
               ( ex1 x64,x65 : 
               (x62<=x64 & x64<=x65 & x65<=x63)
               &
                    # chop
                    ( ex1 x66 : 
                    (x64<=x66 & x66<=x65)
                    &
                        (# inside
                            # ext
                            (x64<x66)
                        & ( all1 x67 :
                            (x64<=x67 & x67<x66)
                            => ( x67 in ( moveis4  inter ({0,..., $} \ ( moveisidle  inter  flooris4 ))))
                          )
                        )
                    &
                        (# now
                            ( x66=x65 )
                        &     (x66 in ({0,..., $} \ ( moveis4  union ( moveisidle  inter  flooris4 ))))
                        )
                    )
               )
            )
        )
;


pred prop8(var1 x68, var1 x69) = 

    (# and
        (# and
            (# and
               (# and
                    # invariant
                    ( all1 x70 :
                        (x68<=x70 & x70<=x69)
                        => ( x70 in (({0,..., $} \ ( moveisidle  inter  flooris0 ))  union  dooris0 ))
                    )
               &
                    # invariant
                    ( all1 x71 :
                        (x68<=x71 & x71<=x69)
                        => ( x71 in (({0,..., $} \ ( moveisidle  inter  flooris1 ))  union  dooris1 ))
                    )
               )
            &
               # invariant
               ( all1 x72 :
                    (x68<=x72 & x72<=x69)
                    => ( x72 in (({0,..., $} \ ( moveisidle  inter  flooris2 ))  union  dooris2 ))
               )
            )
        &
            # invariant
            ( all1 x73 :
               (x68<=x73 & x73<=x69)
               => ( x73 in (({0,..., $} \ ( moveisidle  inter  flooris3 ))  union  dooris3 ))
            )
        )
    &
        # invariant
        ( all1 x74 :
            (x68<=x74 & x74<=x69)
            => ( x74 in (({0,..., $} \ ( moveisidle  inter  flooris4 ))  union  dooris4 ))
        )
    )
;


pred prop9(var1 x75, var1 x76) = 

    # invariant
    ( all1 x77 :
        (x75<=x77 & x77<=x76)
        => ( x77 in (({0,..., $} \ ({0,..., $} \  moveisidle ))  union  doorcls ))
    )
;


pred prop10(var1 x78, var1 x79) = 

    (# and
        (# and
            (# and
               (# and
                    # invariant
                    ( all1 x80 :
                        (x78<=x80 & x80<=x79)
                        => ( x80 in (({0,..., $} \  dooris0 )  union ({0,..., $} \  sendhas0 )))
                    )
               &
                    # invariant
                    ( all1 x81 :
                        (x78<=x81 & x81<=x79)
                        => ( x81 in (({0,..., $} \  dooris1 )  union ({0,..., $} \  sendhas1 )))
                    )
               )
            &
               # invariant
               ( all1 x82 :
                    (x78<=x82 & x82<=x79)
                    => ( x82 in (({0,..., $} \  dooris2 )  union ({0,..., $} \  sendhas2 )))
               )
            )
        &
            # invariant
            ( all1 x83 :
               (x78<=x83 & x83<=x79)
               => ( x83 in (({0,..., $} \  dooris3 )  union ({0,..., $} \  sendhas3 )))
            )
        )
    &
        # invariant
        ( all1 x84 :
            (x78<=x84 & x84<=x79)
            => ( x84 in (({0,..., $} \  dooris4 )  union ({0,..., $} \  sendhas4 )))
        )
    )
;


pred prop11(var1 x85, var1 x86) = 

    (# and
        (# and
            (# and
               (# and
                    # invariant
                    ( all1 x87 :
                        (x85<=x87 & x87<=x86)
                        => ( x87 in (({0,..., $} \  dooris0 )  union ({0,..., $} \  callhas0 )))
                    )
               &
                    # invariant
                    ( all1 x88 :
                        (x85<=x88 & x88<=x86)
                        => ( x88 in (({0,..., $} \  dooris1 )  union ({0,..., $} \  callhas1 )))
                    )
               )
            &
               # invariant
               ( all1 x89 :
                    (x85<=x89 & x89<=x86)
                    => ( x89 in (({0,..., $} \  dooris2 )  union ({0,..., $} \  callhas2 )))
               )
            )
        &
            # invariant
            ( all1 x90 :
               (x85<=x90 & x90<=x86)
               => ( x90 in (({0,..., $} \  dooris3 )  union ({0,..., $} \  callhas3 )))
            )
        )
    &
        # invariant
        ( all1 x91 :
            (x85<=x91 & x91<=x86)
            => ( x91 in (({0,..., $} \  dooris4 )  union ({0,..., $} \  callhas4 )))
        )
    )
;


pred prop12(var1 x92, var1 x93) = 

    (# and
        (# and
            (# and
               (# and
                    # box
                    ( all1 x94,x95 : 
                    (x92<=x94 & x94<=x95 & x95<=x93)
                    =>
                        (# implies
                            # chop
                            ( ex1 x96 : 
                            (x94<=x96 & x96<=x95)
                            &
                                # chop
                                ( ex1 x97 : 
                                (x94<=x97 & x97<=x96)
                                &
                                    (# inside
# ext
(x94<x97)
                                    & ( all1 x98 :
(x94<=x98 & x98<x97)
=> ( x98 in ({0,..., $} \  dooris0 ))
                                      )
                                    )
                                &
                                    (# inside
# ext
(x97<x96)
                                    & ( all1 x99 :
(x97<=x99 & x99<x96)
=> ( x99 in  dooris0 )
                                      )
                                    )
                                )
                            &
                                (# inside
                                    # ext
                                    (x96<x95)
                                & ( all1 x100 :
                                    (x96<=x100 & x100<x95)
                                    => ( x100 in ({0,..., $} \  dooris0 ))
                                  )
                                )
                            )
                        =>
                            # chop
                            ( ex1 x101 : 
                            (x94<=x101 & x101<=x95)
                            &
                                # leneq
                                ( x101 = x94+2 )
                            &
                                # lengeq
                                ( x95 >= x101+3 )
                            )
                        )
                    )
               &
                    # box
                    ( all1 x102,x103 : 
                    (x92<=x102 & x102<=x103 & x103<=x93)
                    =>
                        (# implies
                            # chop
                            ( ex1 x104 : 
                            (x102<=x104 & x104<=x103)
                            &
                                # chop
                                ( ex1 x105 : 
                                (x102<=x105 & x105<=x104)
                                &
                                    (# inside
# ext
(x102<x105)
                                    & ( all1 x106 :
(x102<=x106 & x106<x105)
=> ( x106 in ({0,..., $} \  dooris1 ))
                                      )
                                    )
                                &
                                    (# inside
# ext
(x105<x104)
                                    & ( all1 x107 :
(x105<=x107 & x107<x104)
=> ( x107 in  dooris1 )
                                      )
                                    )
                                )
                            &
                                (# inside
                                    # ext
                                    (x104<x103)
                                & ( all1 x108 :
                                    (x104<=x108 & x108<x103)
                                    => ( x108 in ({0,..., $} \  dooris1 ))
                                  )
                                )
                            )
                        =>
                            # chop
                            ( ex1 x109 : 
                            (x102<=x109 & x109<=x103)
                            &
                                # leneq
                                ( x109 = x102+2 )
                            &
                                # lengeq
                                ( x103 >= x109+3 )
                            )
                        )
                    )
               )
            &
               # box
               ( all1 x110,x111 : 
               (x92<=x110 & x110<=x111 & x111<=x93)
               =>
                    (# implies
                        # chop
                        ( ex1 x112 : 
                        (x110<=x112 & x112<=x111)
                        &
                            # chop
                            ( ex1 x113 : 
                            (x110<=x113 & x113<=x112)
                            &
                                (# inside
                                    # ext
                                    (x110<x113)
                                & ( all1 x114 :
                                    (x110<=x114 & x114<x113)
                                    => ( x114 in ({0,..., $} \  dooris2 ))
                                  )
                                )
                            &
                                (# inside
                                    # ext
                                    (x113<x112)
                                & ( all1 x115 :
                                    (x113<=x115 & x115<x112)
                                    => ( x115 in  dooris2 )
                                  )
                                )
                            )
                        &
                            (# inside
                                # ext
                                (x112<x111)
                            & ( all1 x116 :
                                (x112<=x116 & x116<x111)
                                => ( x116 in ({0,..., $} \  dooris2 ))
                              )
                            )
                        )
                    =>
                        # chop
                        ( ex1 x117 : 
                        (x110<=x117 & x117<=x111)
                        &
                            # leneq
                            ( x117 = x110+2 )
                        &
                            # lengeq
                            ( x111 >= x117+3 )
                        )
                    )
               )
            )
        &
            # box
            ( all1 x118,x119 : 
            (x92<=x118 & x118<=x119 & x119<=x93)
            =>
               (# implies
                    # chop
                    ( ex1 x120 : 
                    (x118<=x120 & x120<=x119)
                    &
                        # chop
                        ( ex1 x121 : 
                        (x118<=x121 & x121<=x120)
                        &
                            (# inside
                                # ext
                                (x118<x121)
                            & ( all1 x122 :
                                (x118<=x122 & x122<x121)
                                => ( x122 in ({0,..., $} \  dooris3 ))
                              )
                            )
                        &
                            (# inside
                                # ext
                                (x121<x120)
                            & ( all1 x123 :
                                (x121<=x123 & x123<x120)
                                => ( x123 in  dooris3 )
                              )
                            )
                        )
                    &
                        (# inside
                            # ext
                            (x120<x119)
                        & ( all1 x124 :
                            (x120<=x124 & x124<x119)
                            => ( x124 in ({0,..., $} \  dooris3 ))
                          )
                        )
                    )
               =>
                    # chop
                    ( ex1 x125 : 
                    (x118<=x125 & x125<=x119)
                    &
                        # leneq
                        ( x125 = x118+2 )
                    &
                        # lengeq
                        ( x119 >= x125+3 )
                    )
               )
            )
        )
    &
        # box
        ( all1 x126,x127 : 
        (x92<=x126 & x126<=x127 & x127<=x93)
        =>
            (# implies
               # chop
               ( ex1 x128 : 
               (x126<=x128 & x128<=x127)
               &
                    # chop
                    ( ex1 x129 : 
                    (x126<=x129 & x129<=x128)
                    &
                        (# inside
                            # ext
                            (x126<x129)
                        & ( all1 x130 :
                            (x126<=x130 & x130<x129)
                            => ( x130 in ({0,..., $} \  dooris4 ))
                          )
                        )
                    &
                        (# inside
                            # ext
                            (x129<x128)
                        & ( all1 x131 :
                            (x129<=x131 & x131<x128)
                            => ( x131 in  dooris4 )
                          )
                        )
                    )
               &
                    (# inside
                        # ext
                        (x128<x127)
                    & ( all1 x132 :
                        (x128<=x132 & x132<x127)
                        => ( x132 in ({0,..., $} \  dooris4 ))
                      )
                    )
               )
            =>
               # chop
               ( ex1 x133 : 
               (x126<=x133 & x133<=x127)
               &
                    # leneq
                    ( x133 = x126+2 )
               &
                    # lengeq
                    ( x127 >= x133+3 )
               )
            )
        )
    )
;


pred prop13(var1 x134, var1 x135) = 

    # box
    ( all1 x136,x137 : 
    (x134<=x136 & x136<=x137 & x137<=x135)
    =>
        (# implies
            # invariant
            ( all1 x138 :
               (x136<=x138 & x138<=x137)
               => ( x138 in ({0,..., $} \  moveisidle ))
            )
        =>
            # lenleq
            ( x137 <= x136+10 )
        )
    )
;


pred prop14(var1 x139, var1 x140) = 

    (# and
        (# and
            (# and
               (# and
                    # box
                    ( all1 x141,x142 : 
                    (x139<=x141 & x141<=x142 & x142<=x140)
                    =>
                        (# implies
                            (# inside
                                # ext
                                (x141<x142)
                            & ( all1 x143 :
                                (x141<=x143 & x143<x142)
                                => ( x143 in  dooris0 )
                              )
                            )
                        =>
                            # lenleq
                            ( x142 <= x141+5 )
                        )
                    )
               &
                    # box
                    ( all1 x144,x145 : 
                    (x139<=x144 & x144<=x145 & x145<=x140)
                    =>
                        (# implies
                            (# inside
                                # ext
                                (x144<x145)
                            & ( all1 x146 :
                                (x144<=x146 & x146<x145)
                                => ( x146 in  dooris1 )
                              )
                            )
                        =>
                            # lenleq
                            ( x145 <= x144+5 )
                        )
                    )
               )
            &
               # box
               ( all1 x147,x148 : 
               (x139<=x147 & x147<=x148 & x148<=x140)
               =>
                    (# implies
                        (# inside
                            # ext
                            (x147<x148)
                        & ( all1 x149 :
                            (x147<=x149 & x149<x148)
                            => ( x149 in  dooris2 )
                          )
                        )
                    =>
                        # lenleq
                        ( x148 <= x147+5 )
                    )
               )
            )
        &
            # box
            ( all1 x150,x151 : 
            (x139<=x150 & x150<=x151 & x151<=x140)
            =>
               (# implies
                    (# inside
                        # ext
                        (x150<x151)
                    & ( all1 x152 :
                        (x150<=x152 & x152<x151)
                        => ( x152 in  dooris3 )
                      )
                    )
               =>
                    # lenleq
                    ( x151 <= x150+5 )
               )
            )
        )
    &
        # box
        ( all1 x153,x154 : 
        (x139<=x153 & x153<=x154 & x154<=x140)
        =>
            (# implies
               (# inside
                    # ext
                    (x153<x154)
               & ( all1 x155 :
                    (x153<=x155 & x155<x154)
                    => ( x155 in  dooris4 )
                 )
               )
            =>
               # lenleq
               ( x154 <= x153+5 )
            )
        )
    )
;


pred concl1(var1 x156, var1 x157) = 

    # invariant
    ( all1 x158 :
        (x156<=x158 & x158<=x157)
        => ( x158 in (((((({0,..., $} \  dooris0 )  union  flooris0 ) inter (({0,..., $} \  dooris1 )  union  flooris1 )) inter (({0,..., $} \  dooris2 )  union  flooris2 )) inter (({0,..., $} \  dooris3 )  union  flooris3 )) inter (({0,..., $} \  dooris4 )  union  flooris4 )))
    )
;


pred concl2(var1 x159, var1 x160) = 

    # box
    ( all1 x161,x162 : 
    (x159<=x161 & x161<=x162 & x162<=x160)
    =>
        (# or
            # lenleq
            ( x162 <= x161+95 )
        |
            # chop
            ( ex1 x163 : 
            (x161<=x163 & x163<=x162)
            &
               # chop
               ( ex1 x164 : 
               (x161<=x164 & x164<=x163)
               &
                    # lenleq
                    ( x164 <= x161+95 )
               &
                    (# inside
                        # ext
                        (x164<x163)
                    & ( all1 x165 :
                        (x164<=x165 & x165<x163)
                        => ( x165 in  dooris0 )
                      )
                    )
               )
            &
               # true
               ( x163<=x162 )
            )
        )
    )
;


pred concl3(var1 x166, var1 x167) = 

    # box
    ( all1 x168,x169 : 
    (x166<=x168 & x168<=x169 & x169<=x167)
    =>
        (# implies
            # chop
            ( ex1 x170 : 
            (x168<=x170 & x170<=x169)
            &
               # chop
               ( ex1 x171 : 
               (x168<=x171 & x171<=x170)
               &
                    (# inside
                        # ext
                        (x168<x171)
                    & ( all1 x172 :
                        (x168<=x172 & x172<x171)
                        => ( x172 in ({0,..., $} \  dooris3 ))
                      )
                    )
               &
                    (# inside
                        # ext
                        (x171<x170)
                    & ( all1 x173 :
                        (x171<=x173 & x173<x170)
                        => ( x173 in  dooris3 )
                      )
                    )
               )
            &
               (# inside
                    # ext
                    (x170<x169)
               & ( all1 x174 :
                    (x170<=x174 & x174<x169)
                    => ( x174 in ({0,..., $} \  dooris3 ))
                 )
               )
            )
        =>
            # lengeq
            ( x169 >= x168+3 )
        )
    )
;



( ex1 x0: ex1 x1:
(
    ( 0 = x0) & (x1 = $) 
)
 & 
( #conclusion
    (# implies
        (# and
            (# and
               (# and
                    (# and
                        (# and
                            (# and
                                (# and
                                    (# and
(# and
    (# and
        (# and
            (# and
               (# and
                    (# and
                        (# and
                            # unfold prop1 
                            prop1(x0,x1)
                        &
                            # unfold prop2 
                            prop2(x0,x1)
                        )
                    &
                        # unfold prop3 
                        prop3(x0,x1)
                    )
               &
                    # unfold prop4 
                    prop4(x0,x1)
               )
            &
               # unfold prop5 
               prop5(x0,x1)
            )
        &
            # unfold prop6 
            prop6(x0,x1)
        )
    &
        # unfold prop8 
        prop8(x0,x1)
    )
&
    # unfold prop9 
    prop9(x0,x1)
)
                                    &
# unfold prop12 
prop12(x0,x1)
                                    )
                                &
                                    # unfold prop13 
                                    prop13(x0,x1)
                                )
                            &
                                # unfold prop14 
                                prop14(x0,x1)
                            )
                        &
                            # unfold prop7a 
                            prop7a(x0,x1)
                        )
                    &
                        # unfold prop7b 
                        prop7b(x0,x1)
                    )
               &
                    # unfold prop7c 
                    prop7c(x0,x1)
               )
            &
               # unfold prop7d 
               prop7d(x0,x1)
            )
        &
            # unfold prop7e 
            prop7e(x0,x1)
        )
    =>
        (# and
            (# and
               # unfold concl1 
               concl1(x0,x1)
            &
               # unfold concl2 
               concl2(x0,x1)
            )
        &
            # unfold concl3 
            concl3(x0,x1)
        )
    )
)
);
