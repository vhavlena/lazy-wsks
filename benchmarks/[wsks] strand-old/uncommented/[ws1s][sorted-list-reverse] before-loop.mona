
ws1s;
var2 $ where ~ex1 p where true: p notin $ & p+1 in $;
allpos $;
defaultwhere1(p) = p in $;
defaultwhere2(P) = P sub $ ;

var0 pc12;
var1 head, end, newhead;

macro next(var1 x, var1 y) =
	head<=x & x+1=y & y<end;
macro close(var1 x, var1 y, var2 M) =
	x<y & (~ex1 z: (z in M & x<z & z<y)) ;
macro next'(var1 x, var1 y, var2 M) =
	close(x, y, M) & head<=x & y<end ;
macro reach(var1 x, var1 y) =
	head<=x & x<=y & y<end ;

macro sll(var1 h, var1 t) =
	(reach(h, t)) &
	(all1 x: (~reach(x, h) | x=h | h=end-1)) &
	(all1 x: (~reach(t, x) | x=t)) &
	(all1 x,y: (reach(h, x) & reach(h, y) & reach(x, t) & reach(y, t))
			=> (reach(x, y) | reach(y, x)));
macro sll'(var1 h, var1 t, var2 M) =
	(reach(h, t)) &
	(all1 x where x in M: (~reach(x, h) | x=h | h=end-1)) &
	(all1 x where x in M: (~reach(t, x) | x=t)) &
	(all1 x,y where x in M & y in M: (reach(h, x) & reach(h, y) & reach(x, t) & reach(y, t))
			=> (reach(x, y) | reach(y, x)));

macro twolists(var1 h1, var1 h2, var1 n) =
	(sll(h1, n) & sll(h2, n)) &
	(all1 y: ((reach(h1, y) & reach(h2, y)) => y=n)) ;
macro twolists'(var1 h1, var1 h2, var1 n, var2 M) =
	(sll'(h1, n, M) & sll'(h2, n, M)) &
	(all1 y where y in M: ((reach(h1, y) & reach(h2, y)) => y=n)) ;

var1 exdv1, exdv2;

macro validmodel =
	(head = 0 &
	head < end-1 &
	newhead = end-1 &
	exdv1 < end &
	exdv2 < end &
	~ex1 x: (end<x));

pred first(var1 x, var2 M) =
	x in M & ~ex1 y: (y in M & y<x) ;

macro validmodel'(var2 M) =
	((head in M & (end-1) in M & end in M) &
	(newhead in M) &
	(exdv1 in M & exdv2 in M) &
	first(head, M) &
	head < end-1 &
	newhead = end-1 &
	exdv1 < end &
	exdv2 < end &
	~ex1 x where x in M: (end<x));

macro presorted(var1 alldv1, var1 alldv2, var0 p11) =
	alldv1=alldv2 | ~reach(head,alldv1) | ~reach(alldv1, alldv2) | alldv2=end-1 | p11;
macro presorted'(var1 alldv1, var1 alldv2, var0 p11, var2 M) =
	alldv1=alldv2 | ~reach(head,alldv1) | ~reach(alldv1, alldv2) | alldv2=end-1 | p11;

macro postsorted = 
	exdv1~=exdv2 & reach(head,exdv1) & reach(exdv1, exdv2) & exdv2~=end-1 & pc12;
macro postsorted'(var2 M) = 
	exdv1~=exdv2 & reach(head,exdv1) & reach(exdv1, exdv2) & exdv2~=end-1 & pc12;

macro postrevsorted = exdv1~=exdv2 & reach(newhead,exdv2) & reach(exdv2, exdv1) & exdv1~=end-1 & pc12;
macro postrevsorted'(var2 M) = exdv1~=exdv2 & reach(newhead,exdv2) & reach(exdv2, exdv1) & exdv1~=end-1 & pc12;

macro postdisjoint = exdv1~=end-1 & exdv2~=end-1 & reach(newhead,exdv1) & reach(head,exdv2) & pc12 ;
macro postdisjoint'(var2 M) = exdv1~=end-1 & exdv2~=end-1 & reach(newhead,exdv1) & reach(head,exdv2) & pc12 ;

macro postloopinv = 
	~twolists(head, newhead, end-1) | postsorted | postrevsorted | postdisjoint ;
macro postloopinv'(var2 M) = 
	~twolists'(head, newhead, end-1, M) | postsorted'(M) | postrevsorted'(M) | postdisjoint'(M) ;

macro precondition(var1 alldv1, var1 alldv2, var0 p11) =
	sll(head, end-1) & presorted(alldv1,alldv2,p11) ;
macro precondition'(var1 alldv1, var1 alldv2, var0 p11, var2 M) =
	sll'(head, end-1, M) & presorted'(alldv1,alldv2,p11,M) ;

macro negpostcondition(var1 alldv1, var1 alldv2, var0 p11) = 
	postloopinv ;
macro negpostcondition'(var1 alldv1, var1 alldv2, var0 p11, var2 M) =
	postloopinv'(M) ;

macro minimalmodel =
	~ex2 M where M~=$:(
	validmodel'(M) &
	all1 dv1,dv2 where dv1 in M & dv2 in M: (
		all0 p11: (
			((~precondition(dv1,dv2,p11) | precondition'(dv1,dv2,p11,M)) | ~negpostcondition(dv1,dv2,p11)) &
			(~precondition(dv1,dv2,p11) | (~negpostcondition(dv1,dv2,p11) | negpostcondition'(dv1,dv2,p11,M)))
		)));

macro existmodel =
	validmodel &
	all1 alldv1,alldv2 : (
		ex0 p11: (
			precondition(alldv1,alldv2,p11) &
			negpostcondition(alldv1,alldv2,p11) &
			((alldv1=exdv1 & alldv2=exdv2) => (pc12 <=> ~p11))
		));

export("sllrev-beforeloop", existmodel & minimalmodel);
